import { V3ApiRef } from '../types';
export type V3UserLicense = 'direct' | 'partner';
export type V3UserInvitationStatus = 'sent' | 'processed' | 'opened' | null;
export interface V3User {
    id: string;
    resourcetype: 'User';
    href: string;
    email: string;
    userName: string;
    firstName: string;
    isActive: boolean;
    isAnonymized: boolean;
    isPromotedMember: boolean;
    lastName: string;
    apiKey: string;
    avatar: V3ApiRef | null;
    bccAddresses: string[];
    collectionsVersion: number;
    companyName: string;
    companyRole: string | null;
    consentGivenAt: string;
    consentGiven: null;
    consentGivenFrom: string;
    consentRequired: boolean;
    createdAt: string;
    divisionpermissions: null;
    emailActivation: null;
    emailNotifications: boolean;
    emailSignature: string | null;
    externalId: string | null;
    forcePasswordReset: boolean;
    ftueStatus: string;
    insightsLastViewedAt: string | null;
    invitationConfirmedAt: string | null;
    isInvited: boolean;
    isPasswordSet: boolean;
    isPasswordExpired: boolean;
    isSynced: boolean;
    isTrainingCoachingManager: null;
    language: string;
    lastConfirmedContentUpdate: string | null;
    lastInvitationSentAt: string | null;
    lastInvitationStatus: V3UserInvitationStatus;
    lastLogin: string;
    lastUsedDevice: V3ApiRef;
    managedUsergroups: null;
    multiPillarNavigation: boolean;
    myUploadsCollectionId: string;
    myUploadsDivisionId: string;
    personalContentFileSizeUsed: number;
    personalContentIndividualFileSizeLimit: number;
    personalContentTotalFileSizeLimit: number;
    isPersonalContentTotalUnlimited: boolean;
    phone: string | null;
    productLicenseContent: V3UserLicense | null;
    productLicenseTrainingCoaching: V3UserLicense | null;
    timezone: string;
    updatedAt: string;
    userpermission: V3ApiRef;
    userType: 'owner' | 'admin';
    scimId: null;
}
