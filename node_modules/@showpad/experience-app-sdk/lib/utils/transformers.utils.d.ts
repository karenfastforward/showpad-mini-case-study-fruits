import { JsonValue } from 'type-fest';
import { RawAppsDbEntry, OriginalAsset, OriginalConfigJSON, OriginalUserInfo, AppsDbEntry, Asset, Collection, ConfigJSON, EnrichedAsset, EnrichedConfigJSON, Scalar, UserInfo } from '@showpad/experience-app-types';
export declare const standardizeUserInfo: (userInfo: OriginalUserInfo) => UserInfo;
export declare const standardizeHasFeature: (hasFeature: true | false | null) => boolean;
export declare const standardizeAsset: (asset: OriginalAsset) => Asset;
export declare const standardizeAssets: (assets: OriginalAsset[]) => Asset[];
export declare const standardizeConfigJson: <T extends ConfigJSON>(originalConfigJSON: OriginalConfigJSON) => T;
export declare const enrichConfigJson: <T extends EnrichedConfigJSON>(configJSON: ConfigJSON, enrichAssets: (assets: Asset[]) => Promise<EnrichedAsset[]>) => Promise<T>;
export declare const isJsonString: (str: string) => boolean;
export declare const toAppsDbValue: (input: Scalar) => string;
export declare const fromAppsDbValue: <T extends JsonValue = JsonValue>(input: string) => T;
export declare const fromAppsDbEntry: <T extends JsonValue = JsonValue>(entry: RawAppsDbEntry) => AppsDbEntry<T>;
export declare const standardizeCollectionId: (id: string | number) => string;
export declare const standardizeCollectionIds: (ids: (string | number)[]) => string[];
export declare const standardizeCollections: (collections: Collection[]) => Collection[];
