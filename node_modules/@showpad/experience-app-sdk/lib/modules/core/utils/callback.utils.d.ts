export declare const DEFAULT_CALLBACK_NULL_ERROR = "null was returned, something went wrong";
export declare const fireAndForget: <T>(spLibFunction: (p: T) => boolean, param: T) => void;
export declare const toPromise0: <R, O = R>(spLibFunction: (callback: (result: O extends R ? R : O) => void) => 0 | 1, spLibCallbackNullError: string, spLibTranform?: (original: O) => R) => Promise<R>;
export declare const toPromise1: <P, R, O = R>(param: P, spLibFunction: (parameter: P, callback: (result: O extends R ? R : O) => void) => 0 | 1, spLibCallbackNullError: string, spLibTranform?: (original: O) => R) => Promise<R>;
export declare const toPromise1ErrorFirstCallback: <P, R, O = R>(param: P, spLibFunction: (parameter: P, callback: (error: Error | null, result: O extends R ? R : O) => void) => 0 | 1, spLibTranform?: (original: O) => R) => Promise<R>;
export declare const toPromise2: <P1, P2, R, O = R>(param1: P1, param2: P2, spLibFunction: (parameter1: P1, parameter2: P2, callback: (result: O extends R ? R : O) => void) => 0 | 1, spLibCallbackNullError: string, spLibTranform?: (original: O) => R) => Promise<R>;
export declare const toPromise3: <P1, P2, P3, R, O = R>(param1: P1, param2: P2, param3: P3, spLibFunction: (parameter1: P1, parameter2: P2, parameter3: P3, callback: (result: O extends R ? R : O) => void) => 0 | 1, spLibCallbackNullError: string, spLibTranform?: (original: O) => R) => Promise<R>;
